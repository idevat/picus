{{breadcrumb-menu active='Fencing Wizard' path=(array "cluster.index" "cluster.fences")}}

{{#step-manager as |w|}}
  {{#with (hash fenceAgent='Select Agent' fenceProperties='Properties') as |labels|}}
  {{#each w.steps as |step|}}
    {{#if (contains (array 'loadingMetadata' 'loadingList') step)}}
      {{#if (eq step w.currentStep) }}
        *(load)*
      {{/if}}
    {{else}}
      {{#if (gt step w.currentStep)}}
        <button>
          {{if (get labels step) (get labels step) step}}
        </button>
      {{else}}
        <button {{action w.transition-to step}}>
          {{#if (eq step w.currentStep)}}*{{/if}}
          {{if (get labels step) (get labels step) step}}
          {{#if (eq step w.currentStep)}}*{{/if}}
        </button>
      {{/if}}
    {{/if}}
  {{/each}}
  {{/with}}

  {{#w.step name='fenceAgent'}}
    {{#form-for model.agentForm submit=(route-action 'selectFenceAgent' w) as |f|}}
      {{f.select-field 'fenceAgent' model.availableAgents.undefinedProvider label='Fence Agent' required=true}}
      {{! @todo: Add description of the fence agent - this is not available in the pcsd because of rhbz#1384109 }}
      {{f.submit "Next"}}
    {{/form-for}}
  {{/w.step}}

  {{#w.step name='loadingMetadata'}}
    <h3>Waiting for response from pcsd</h3>
  {{/w.step}}

  {{#w.step name='fenceProperties'}}
    <h3>Define Fence Agent</h3>

    {{model.agentMetadata.parameters}}

    {{#agent-properties
      formData = model.modelForm
      metadata = model.agentMetadata
      appendValidations = model.resourceValidation
      showLevels = (array 'basic')
      showInternalNames = showInternalNames
      filterString = filterString
      toggleInternalNames = (action 'toggleInternalNames')
      updateFilterString = (action 'updateFilterString')
      submitTitle = 'Next Page'
      availableMetadata = true
      submitAction = (route-action 'onSubmitAction' w) as |f|
    }}
      {{f.text-field 'resourceName' label='Fence Device Name' hint='small help' required=true}}
      {{model.metadata.shortdesc}}
      <hr />
    {{/agent-properties}}
  {{/w.step}}

  {{#w.step name='loadingList'}}
    <h3>Waiting for response from pcsd: action list</h3>
  {{/w.step}}

  {{#w.step name='mapping'}}
    <h3>Select a mapping scheme</h3>

    {{#model-form
      model.mappingForm
      submit=(route-action 'selectMapping' w)
      as |f|
    }}
      {{f.select-field
        'mappingScheme'
        options="automatic manual"
        required=true
      }}
      {{#each model.updatingCluster.firstObject.nodes as |node|}}
        {{f.fence-field
          (concat 'fence_' node.name)
          label=node.name
          port=(array-contains
            model.agentMetadata.response.parameters
            'port'
            property='name'
          )
        }}
      {{/each}}

      {{f.submit "Next"}}
    {{/model-form}}
  {{/w.step}}

  {{#w.step name='summary'}}
      <br /> Summary: <br />
      Name: {{model.modelForm.resourceName}} <br />
      Type: {{model.agentForm.fenceAgent}} <br />
      Mapping scheme: <br />
      <ul>
      {{#each model.updatingCluster.firstObject.nodes as |node|}}
        <li>{{node.name}} :: {{get model.mappingForm node.name}}</li>
      {{/each}}
      </ul>
    {{#bs-button onClick=(route-action 'submitAgent')}}Setup fence agent{{/bs-button}}
  {{/w.step}}
{{/step-manager}}
